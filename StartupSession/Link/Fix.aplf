 {linked}←where Fix src;link;nss;files;file;src;nc;nosrc;fsw;old;ns;name;⎕TRAP;oldname;z;ext;stop;array;oldfile
⍝ Fix a function/operator or script, preserving any existing source files
⍝   Used internally by EditorFix "afterfix" processing
⍝   May be called by other tools providing the source in ⎕NR/⎕SRC format on the right
⍝   One day, the left argument of (ns name) may be inferred, for now it must be provided

⍝ Returns 1 if a link was found for the name, else 0
⍝   NB: if 0 is returned, no ⎕FX/⎕FIX was done

 :If U.debug=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf

 :Trap DEBUG↓0
     →('⎕SE.Link.OnAfterFix'≡⊃1↓⎕XSI)/NOHOLD ⍝ Can't hold in a high-priority callback (Editor AfterFix callback)
     :Hold '⎕SE.Link.Notify'
NOHOLD:
         nosrc←0=≢src
         (ns name oldname)←3↑where,'' ''
         oldname,←(0=≢oldname)/name ⍝ oldname not specified
         name,←(0=≢name)/oldname ⍝ name not specified
         ns←⍎⍣(''≡0⍴∊ns)⊢ns
         z←ns←⍬⍴ns

         (linked link)←0 ⍬

         :If 0≠⎕NC'⎕SE.Link.Links'
         :AndIf 0≠≢⎕SE.Link.Links
             nss←⍎¨⎕SE.Link.Links.ns
             :Repeat
                 :If ~linked←z∊nss
                     linked←(z←z⍎'##')∊nss
                 :EndIf
             :Until linked∨z∊# ⎕SE ⎕DMX
             :If linked
                 link←(nss⍳z)⊃⎕SE.Link.Links
             :EndIf

         :EndIf

         :If linked
             :If 'none' 'dir'∊⍨⊂link.watch ⍝ Not watching the workspace
             :AndIf 0=≢src
                 →0 ⍝ Just notification, probably editor callback. No more to do.
             :EndIf

             :Trap 0
                 (file oldfile)←1 U.DetermineFileName link ns name oldname src
             :Else ⋄ U.Resignal 1
             :EndTrap
             nc←ns.⎕NC⊂,name

             :If (0≠≢oldfile)∧oldname≢name
                 (⊂ns.⎕NR oldname)⎕NPUT oldfile 1 ⍝ Repair damage done by editor
                 2 ns.⎕FIX'file://',oldfile ⍝ Necessary with FSW?
                 file←∊(⊂name)@2 ⎕NPARTS file
             :EndIf

             :If nosrc                       ⍝ Source not provided - find it
                 :Select ⌊nc
                 :Case 2
                     src←ns⍎name
                 :CaseList 3 4
                     src←ns.⎕NR name
                 :Case 9
                     src←⎕SRC ns⍎name
                 :Else
                     1 U.Resignal⍨' *** Fix: unable to handle ',(⍕ns),'.',name,' (⎕NC =',(⍕nc),')'
                 :EndSelect
             :EndIf

             :If 3=link.(⎕NC beforeWrite)
                 →((⍎link.beforeWrite)ns name oldname nc src file link 0)↓0
             :EndIf

             :If array←2=⌊nc ⍝ Arrays need to be serialised
                 z←src
                 :If (⊂link.watch)∊'ns' 'both' ⍝ Need to update the file?
                 ⍝ The test is repeated in the next :If, but we need to validate ability to serialize and issue error message before setting the value
                     :Trap 11
                         src←,↓Serialise src
                     :Else
                         'Unsupported array'U.Resignal 1
                     :EndTrap
                 :EndIf
                 ⍎(⍕ns),'.',name,'←z'
             :EndIf

             :If (⊂link.watch)∊'ns' 'both' ⍝ Should we update the file?
                 :Trap 0
                     :If fsw←0≠⎕NC⊂'link.fsw.Object.EnableRaisingEvents'
                         old←link.fsw.Object.EnableRaisingEvents
                         link.fsw.Object.EnableRaisingEvents←0
                     :EndIf
                     3 ⎕MKDIR 1⊃⎕NPARTS file ⍝ make sure folder is there
                     (⊂src)⎕NPUT file 1
                 :Else
                     old←0
                     :If fsw ⋄ link.fsw.Object.EnableRaisingEvents←old ⋄ :EndIf
                     1 U.Resignal⍨' *** Fix: Unable to write "',name,'" to file ',file
                 :EndTrap
                 :If fsw ⋄ link.fsw.Object.EnableRaisingEvents←old ⋄ :EndIf
             :EndIf                        ⍝ Updating file

             :If ~array ⍝ Now ensure the value is updated in the ns
                 :If link.watch≡'both' ⍝ Refresh link to updated file
                     :Trap 0
                         2 ns.⎕FIX'file://',file
                     :Else
                         1 U.Resignal⍨' *** Fix: Unable to re-fix "',name,'" from file ',file
                     :EndTrap
                 :Else ⍝ watch=ns: do not read back
                     :Select ⌊nc
                         ⍝ no :Case 2, that was handled earlier
                     :CaseList 3 4 
                         2 ns.⎕FIX src
                     :Case 9
                         ns.⎕FIX src
                     :EndSelect
                 :EndIf
             :EndIf ⍝ ~ array
         :EndIf ⍝ Linked
     :EndHold ⍝ 'Notify'
 :Else
     U.Resignal 1
 :EndTrap
